(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{352:function(module,exports){module.exports='<a rel="license" href="${url}" class="image">\n    <img width="${imageWidth}" height="${imageHeight}" alt="Creative Commons License" src="${image}" />\n</a>\n<br />\n${work} ${attribution} is licensed under a <a rel="license" href="${url}" class="title">${title}</a>.\n${source}\n${permissions}\n'},353:function(module,exports,__webpack_require__){var result=__webpack_require__(945);module.exports="string"==typeof result?result:result.toString()},354:function(module,exports,__webpack_require__){__webpack_require__(355),__webpack_require__(750),module.exports=__webpack_require__(751)},469:function(module,exports){},499:function(module,exports){},537:function(module,exports){},582:function(module,exports){},624:function(module,exports){},667:function(module,exports){},697:function(module,exports){},751:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(351),req=__webpack_require__(935);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.configure)(req,module)}.call(this,__webpack_require__(752)(module))},935:function(module,exports,__webpack_require__){var map={"./cc-license/@component.stories.ts":947};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=935},945:function(module,exports,__webpack_require__){(exports=__webpack_require__(946)(!1)).push([module.i,"cc-license img{border-width:0;font-size:8px}",""]),module.exports=exports},947:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"CcLicense",(function(){return _component_stories_CcLicense})),__webpack_require__.d(__webpack_exports__,"CcLicenseBuilder",(function(){return CcLicenseBuilder}));var dist=__webpack_require__(26);var cc_license=__webpack_require__(352),cc_license_default=__webpack_require__.n(cc_license),cc_license_cc_license=__webpack_require__(353),cc_license_cc_license_default=__webpack_require__.n(cc_license_cc_license);class cc_license_CcLicense extends HTMLElement{constructor(){super(),this.componentAttributes=["license","adaptations","commercial","icon","work-title","source","attribution-title","attribution-url","permissions","format"],this.licenseMetadata=["workTitle","source","attributionTitle","attributionUrl","permissions","format"],this.formats={audio:"http://purl.org/dc/dcmitype/Sound",video:"http://purl.org/dc/dcmitype/MovingImage",image:"http://purl.org/dc/dcmitype/StillImage",text:"http://purl.org/dc/dcmitype/Text",dataset:"http://purl.org/dc/dcmitype/Dataset",interactive:"http://purl.org/dc/dcmitype/InteractiveResource"}}getLicense(license,iconSize){let title,imageHeight,imageWidth;switch(license){case"by":title="Attribution";break;case"by-nc":title="Attribution-NonCommercial";break;case"by-nc-nd":title="Attribution-NonCommercial-NoDerivatives";break;case"by-nc-sa":title="Attribution-NonCommercial-ShareAlike";break;case"by-nd":title="Attribution-NoDerivatives";break;case"by-sa":title="Attribution-ShareAlike";break;default:license="by",title="Attribution"}switch(iconSize){case"80x15":case"88x31":{const imageSizes=iconSize.split("x");imageHeight=parseInt(imageSizes[1]),imageWidth=parseInt(imageSizes[0]);break}default:iconSize="88x31",imageHeight=31,imageWidth=88}return{url:`http://creativecommons.org/licenses/${license}/4.0/`,image:`https://i.creativecommons.org/l/${license}/4.0/${iconSize}.png`,imageHeight:imageHeight,imageWidth:imageWidth,title:`Creative Commons ${title} 4.0 International License`}}chooseLicense(adaptations,commercial,icon){switch(adaptations){case"yes":return commercial?this.getLicense("by",icon):this.getLicense("by-nc",icon);case"no":return commercial?this.getLicense("by-nd",icon):this.getLicense("by-nc-nd",icon);case"share-alike":return commercial?this.getLicense("by-sa",icon):this.getLicense("by-nc-sa",icon)}return this.getLicense("by",icon)}getMetadata(attributes){const metadata={};return this.licenseMetadata.forEach(dataAttribute=>{if(attributes[dataAttribute])if("format"===dataAttribute){const attrLowerCase=attributes[dataAttribute].toLowerCase();metadata.format=this.formats[attrLowerCase]}else metadata[dataAttribute]=attributes[dataAttribute]}),metadata}generateLicense(attributes){let license;const icon=attributes.icon;if(attributes.license)license=this.getLicense(attributes.license,icon);else{const adaptations=attributes.adaptations,commercial=!attributes.commercial||"true"===attributes.commercial;license=this.chooseLicense(adaptations,commercial,icon)}const metadata=this.getMetadata(attributes);return 0!==Object.entries(metadata).length&&(license.metadata=metadata),license}generateTemplateVariables(license){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const variables={url:license.url,imageWidth:license.imageWidth,imageHeight:license.imageHeight,image:license.image,title:license.title,work:"This work",attribution:"",source:"",permissions:""};if((null===(_a=license.metadata)||void 0===_a?void 0:_a.workTitle)||(null===(_b=license.metadata)||void 0===_b?void 0:_b.format)){let typeMetaData="";(null===(_c=license.metadata)||void 0===_c?void 0:_c.format)&&(typeMetaData=`href="${license.metadata.format}" rel="dct:type"`),(null===(_d=license.metadata)||void 0===_d?void 0:_d.workTitle)?variables.work=`<span xmlns:dct="http://purl.org/dc/terms/" property="dct:title" ${typeMetaData}>${license.metadata.workTitle}</span>`:variables.work=`This <span ${typeMetaData}>work</span>`}if((null===(_e=license.metadata)||void 0===_e?void 0:_e.attributionTitle)||(null===(_f=license.metadata)||void 0===_f?void 0:_f.attributionUrl)){const attributionMetaData='xmlns:cc="http://creativecommons.org/ns#" property="cc:attributionName"';(null===(_g=license.metadata)||void 0===_g?void 0:_g.attributionUrl)?variables.attribution=`\n        by\n        <a \n          ${attributionMetaData}\n          href="${license.metadata.attributionUrl}" \n          rel="cc:attributionURL"\n        >${license.metadata.attributionTitle||license.metadata.attributionUrl}</a>`:variables.attribution=`\n        by\n        <span ${attributionMetaData}>${license.metadata.attributionTitle}</span>`}return(null===(_h=license.metadata)||void 0===_h?void 0:_h.source)&&(variables.source=`\n      <br />\n      Based on a work at \n      <a \n        xmlns:dct="http://purl.org/dc/terms/"\n        href="${license.metadata.source}"\n        rel="dct:source"\n      >${license.metadata.source}</a>.`),(null===(_j=license.metadata)||void 0===_j?void 0:_j.permissions)&&(variables.permissions=`\n      <br />\n      Permissions beyond the scope of this license may be available at\n      <a \n        xmlns:cc="http://creativecommons.org/ns#"\n        href="${license.metadata.permissions}"\n        rel="cc:morePermissions"\n      >${license.metadata.permissions}</a>.`),variables}connectedCallback(){const templateElement=document.createElement("template");templateElement.innerHTML=`<style>${cc_license_cc_license_default.a}</style>`;const attributes={};this.componentAttributes.forEach(attribute=>{const key=function attrToCamel(attr){return attr.split("-").map((part,i)=>0!==i?part.charAt(0).toUpperCase()+part.slice(1):part).join("")}(attribute);attributes[key]=this.getAttribute(attribute)});const license=this.generateLicense(attributes),templateVariables=this.generateTemplateVariables(license);templateElement.innerHTML+=function prepareTemplate(template,variables,fallback=""){return template.replace(/\${[^{]+}/g,match=>match.slice(2,-1).trim().split(".").reduce((res,key)=>res[key]||fallback,variables))}(cc_license_default.a,templateVariables,""),this.appendChild(templateElement.content.cloneNode(!0))}}window.customElements.define("cc-license",cc_license_CcLicense);__webpack_exports__.default={decorators:[dist.withKnobs],parameters:{notes:{notes:"# Creative Commons license generator as web component\n\nEncapsulate the html code from the [Creative Commons license 'Choose a license' form](https://creativecommons.org/choose/) in a web component.\n\nYou can define your license and license metadata through the component attributes.\n\n## Use\n\nThere are two options to use the component.\n\n### Integrate it in your javascript project\n\n``` js\nnpm i creative-commons-web-component\n```\n\nAnd import it in your js file:\n\n``` js\nimport 'creative-commons-web-component'\n```\n\nThen use it in your html or js template\n\n``` html\n<cc-license [attributes?]></cc-license>\n```\n\n### Use it directly in your page\n\n``` html\n<script src=\"ccLicense.dist.js\"><\/script>\n<cc-license [attributes?]></cc-license>\n```\n\n## Attributes\n\nAll attributes are optional\n\n| Attribute           | Type                                             | Description                                      |\n|---------------------|--------------------------------------------------|--------------------------------------------------|\n| `license`           | `'by' | 'by-nc' | 'by-nc-nd' | 'by-nc-sa' | 'by-nd' | 'by-sa'` | Choose the license (overwrites adaptations & commercial) |\n| `adaptations`       | `'yes' | 'no' | 'share-alike'`                 | Allow adaptations of your work to be shared?     |\n| `commercial`        | `Boolean`                                        | Allow commercial uses of your work?              |\n| `icon`              | `'88x31' | '80x15'`                             | The icon size                                    |\n| `work-title`        | `String`                                         | The title of the work you are licensing.         |\n| `attribution-title` | `String`                                         | The name of the person who should receive attribution for the work. Most often, this is the author. |\n| `attribution-url`   | `String`                                         | The URL to which the work should be attributed.  |\n| `permissions`       | `String`                                         | A URL where a user can find information about obtaining rights that are not already permitted by the CC license. |\n| `source`            | `String`                                         | The URL of the work upon which this work is based or derived. |\n| `format`            | `'audio' | 'video' | 'image' | 'text' | 'dataset' | 'interactive'` | Describes what kind of work is being licensed.   |\n"}},title:"Creative Commons Web Component"};const _component_stories_CcLicense=()=>{const component=document.createElement("cc-license"),license=Object(dist.select)("License",{Attribution:"by","Attribution-NonCommercial":"by-nc","Attribution-NonCommercial-NoDerivatives":"by-nc-nd","Attribution-NonCommercial-ShareAlike":"by-nc-sa","Attribution-NoDerivatives":"by-nd","Attribution-ShareAlike":"by-sa"},"by");component.setAttribute("license",license);const icon=Object(dist.radios)("Icon",{"Normal (88x31)":"88x31","Compact (80x15)":"80x15"},"88x31");component.setAttribute("icon",icon);[{title:"Title of work",attribute:"work-title"},{title:"Source work URL",attribute:"source"},{title:"Attribute work to name",attribute:"attribution-title"},{title:"Attribute work to URL",attribute:"attribution-url"},{title:"More permissions URL",attribute:"permissions"}].forEach(option=>{const dataAttribute=Object(dist.text)(option.title,"");component.setAttribute(option.attribute,dataAttribute)});const format=Object(dist.select)("Format",{Audio:"Audio",Video:"Video",Image:"Image",Text:"Text",Dataset:"Dataset",Interactive:"Interactive"},"by");return component.setAttribute("format",format),component},CcLicenseBuilder=()=>{const component=document.createElement("cc-license"),adaptations=Object(dist.select)("Allow adaptations of your work to be shared?",{Yes:"yes",No:"no","Share-alike":"share-alike"},"yes");component.setAttribute("adaptations",adaptations);const commercial=Object(dist.boolean)("Allow commercial uses of your work?",!0)?"true":"false";component.setAttribute("commercial",commercial);const icon=Object(dist.radios)("Icon",{"Normal (88x31)":"88x31","Compact (80x15)":"80x15"},"88x31");component.setAttribute("icon",icon);[{title:"Title of work",attribute:"work-title"},{title:"Source work URL",attribute:"source"},{title:"Attribute work to name",attribute:"attribution-title"},{title:"Attribute work to URL",attribute:"attribution-url"},{title:"More permissions URL",attribute:"permissions"}].forEach(option=>{const dataAttribute=Object(dist.text)(option.title,"");component.setAttribute(option.attribute,dataAttribute)});const format=Object(dist.select)("Format",{Audio:"Audio",Video:"Video",Image:"Image",Text:"Text",Dataset:"Dataset",Interactive:"Interactive"},"by");return component.setAttribute("format",format),component}}},[[354,1,2]]]);
//# sourceMappingURL=main.9074a34741ecd24c1260.bundle.js.map